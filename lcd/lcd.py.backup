import drivers
from time import sleep
from socket import *
import sys

class SocketInfo:

    # def __init__(self, host="", port=8888):
    #     self.BUFSIZE = 50
    #     self.HOST = host
    #     self.PORT = port
    #     self.ADDR = (self.HOST, self.PORT)

    # def run(self):
    #     display = drivers.Lcd()
    #     display.lcd_backlight(1)
    #     display.lcd_display_string("Greetings Human!", 1)  
    #     display.lcd_display_string("Demo Pi Guy code", 2)  
    #     sleep(2)  

    #     clientSock = socket(AF_INET, SOCK_STREAM)
    #     clientSock.connect(self.ADDR)
    #     display.lcd_clear()
    #     display.lcd_display_string("connected!", 1)  


    #     while(True):
    #         data = clientSock.recv(self.BUFSIZE)
    #         data = data.decode('utf-8')
    #         data = data.split(' ')[0]

    #         print('받은 데이터 : ', data, len(data))

            
    #         print(data)
    #         sleep(1)  

        
    #         # command = command.replace('b\', '')
    #         # command = command.replace('\\x00N=\\xf6', '')
    #         # command = command.replace('\'', '')
    #         display.lcd_display_string("EMOTION DETECTED!", 1)  # Write line of text to first line of display
    #         display.lcd_display_string(data, 2)  # Write line of text to second line of display
    #         # display.lcd_display_string(command, 2)  # Write line of text to second line of display
            
    #         sleep(0.5)
    #         display.lcd_clear()

    #     clientSock.close()
    def run():
        display = drivers.Lcd()
        display.lcd_backlight(1)

        while(True):
            f = open("../server/lcd.txt", "r")
            line = f.readline()
            display.lcd_display_string("EMOTION DETECTED", 1)
            display.lcd_display_string(line, 2)
            f.close()

            sleep(0.5)
            display.lcd_clear()


if __name__ == '__main__':
    args = sys.argv
    if len(args) < 3:
        print("need host, port args")
        quit()

    # client_socket = SocketInfo(args[1], int(args[2]))
    # client_socket.run()
    SocketInfo.run()